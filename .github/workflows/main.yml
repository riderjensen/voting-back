name: Continuous Deployment

on:
  push:
    branches:
      - main

jobs:
  deployment:
    runs-on: self-hosted
    steps:
      - name: Checkout main branch
        uses: actions/checkout@v3

      - name: Create and populate .env file
        env:
          MYSQL_DATABASE: ${{ vars.MYSQL_DATABASE }}
          MYSQL_PASSWORD: ${{ vars.MYSQL_PASSWORD }}
          MYSQL_PORT: ${{ vars.MYSQL_PORT }}
          MYSQL_ROOT_PASSWORD: ${{ vars.MYSQL_ROOT_PASSWORD }}
          MYSQL_USER: ${{ vars.MYSQL_USER }}
          PORT: ${{ vars.PORT }}
          TOKEN_SECRET: ${{ secrets.TOKEN_SECRET }}
          EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
          EMAIL_CLIENT_ID: ${{ secrets.EMAIL_CLIENT_ID }}
          EMAIL_CLIENT_SECRET: ${{ secrets.EMAIL_CLIENT_SECRET }}
          EMAIL_REFRESH_TOKEN: ${{ secrets.EMAIL_REFRESH_TOKEN }}
        run: |
          touch .env
          echo MYSQL_DATABASE="$MYSQL_DATABASE" >> .env
          echo MYSQL_PASSWORD="$MYSQL_PASSWORD" >> .env
          echo MYSQL_PORT="$MYSQL_PORT" >> .env
          echo MYSQL_ROOT_PASSWORD="$MYSQL_ROOT_PASSWORD" >> .env
          echo MYSQL_USER="$MYSQL_USER" >> .env
          echo PORT="$PORT" >> .env
          echo TOKEN_SECRET="$TOKEN_SECRET" >> .env
          echo EMAIL_PASSWORD="$EMAIL_PASSWORD" >> .env
          echo EMAIL_CLIENT_ID="$EMAIL_CLIENT_ID" >> .env
          echo EMAIL_CLIENT_SECRET="$EMAIL_CLIENT_SECRET" >> .env
          echo EMAIL_REFRESH_TOKEN="$EMAIL_REFRESH_TOKEN" >> .env
        shell: bash

      - name: Run the deploy script
        run: |
          docker image prune -f
          docker network inspect dota >/dev/null 2>&1 || docker network create --driver dota
          docker build -f Dockerfile -t api:latest .
          docker-compose up -d --remove-orphans
        shell: bash